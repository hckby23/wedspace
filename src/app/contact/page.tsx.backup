"use client";

import React, { useState } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Label } from "@/components/ui/label";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Badge } from "@/components/ui/badge";
import EnhancedPageHero from "@/components/layout/EnhancedPageHero";
import PageContainer from "@/components/layout/PageContainer";
import {
  Phone,
  Mail,
  MapPin,
  Clock,
  MessageCircle,
  Send,
  CheckCircle,
  Heart,
  Users,
  Headphones,
  Globe,
  Calendar,
  Star,
  ArrowRight,
  ExternalLink,
  Sparkles
} from "lucide-react";

const contactMethods = [
  {
    icon: Phone,
    title: 'Call Us',
    description: 'Speak directly with our wedding experts',
    value: '+91 98765 43210',
    action: 'Call Now',
    available: '9 AM - 9 PM IST',
    color: 'from-green-500 to-emerald-600'
  },
  {
    icon: Mail,
    title: 'Email Support',
    description: 'Get detailed help via email',
    value: 'hello@wedspace.in',
    action: 'Send Email',
    available: '24/7 Response',
    color: 'from-blue-500 to-indigo-600'
  },
  {
    icon: MessageCircle,
    title: 'Live Chat',
    description: 'Chat with our support team instantly',
    value: 'Start Chat',
    action: 'Chat Now',
    available: 'Online Now',
    color: 'from-purple-500 to-violet-600'
  },
  {
    icon: Calendar,
    title: 'Book Consultation',
    description: 'Schedule a free wedding planning session',
    value: 'Free 30-min call',
    action: 'Book Now',
    available: 'Available Today',
    color: 'from-red-500 to-pink-600'
  }
];



export default function ContactPage() {
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    phone: '',
    subject: '',
    message: '',
    inquiryType: ''
  });
  const [isSubmitting, setIsSubmitting] = useState(false);

  const handleInputChange = (field: string, value: string) => {
    setFormData(prev => ({ ...prev, [field]: value }));
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setIsSubmitting(true);
    
    // Simulate form submission
    await new Promise(resolve => setTimeout(resolve, 2000));
    
    window.alert('Thank you for your message! We\'ll get back to you within 24 hours.');
    setFormData({
      name: '',
      email: '',
      phone: '',
      subject: '',
      message: '',
      inquiryType: ''
    });
    setIsSubmitting(false);
  };

  return (
    <main className="min-h-screen bg-background">
      {/* Hero Section */}
      <section className="bg-gradient-to-br from-red-50 via-white to-amber-50 dark:from-red-950/20 dark:via-gray-900 dark:to-amber-950/20 py-16">
        <div className="container-custom">
          <div className="max-w-4xl mx-auto text-center">
            <Badge className="mb-6 bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-300 border-red-200 dark:border-red-800">
              <Headphones className="w-4 h-4 mr-2" />
              24/7 Support Available
            </Badge>
            <h1 className="font-playfair text-4xl md:text-6xl font-bold text-gray-900 dark:text-white mb-6">
              We're Here to Help
              <span className="text-red-600 block">Make Your Dream Wedding</span>
            </h1>
            <p className="text-xl text-gray-600 dark:text-gray-300 mb-8 max-w-3xl mx-auto leading-relaxed">
              Have questions about planning your wedding? Need help finding the perfect venue or vendor? 
              Our expert team is ready to assist you every step of the way.
            </p>
            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <Button size="lg" className="bg-red-600 hover:bg-red-700">
                <Phone className="w-5 h-5 mr-2" />
                Call Us Now
              </Button>
              <Button size="lg" variant="outline" className="border-gray-300 dark:border-gray-600">
                <MessageCircle className="w-5 h-5 mr-2" />
                Start Live Chat
              </Button>
            </div>
          </div>
        </div>
      </section>

      {/* Contact Methods */}
      <section className="py-16 bg-white dark:bg-gray-800">
        <div className="container-custom">
          <div className="text-center mb-12">
            <h2 className="font-playfair text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-4">
              Get in Touch
            </h2>
            <p className="text-lg text-gray-600 dark:text-gray-300 max-w-2xl mx-auto">
              Choose the best way to reach us. We're committed to responding quickly and helping you succeed.
            </p>
          </div>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
            {contactMethods.map((method, index) => {
              const IconComponent = method.icon;
              return (
                <Card key={index} className="border-0 shadow-md hover:shadow-lg transition-all duration-300 hover:scale-105 cursor-pointer">
                  <CardContent className="p-6 text-center">
                    <div className={`w-16 h-16 bg-gradient-to-br ${method.color} rounded-full flex items-center justify-center mx-auto mb-4`}>
                      <IconComponent className="w-8 h-8 text-white" />
                    </div>
                    <h3 className="font-semibold text-gray-900 dark:text-white mb-2">{method.title}</h3>
                    <p className="text-gray-600 dark:text-gray-300 text-sm mb-3">{method.description}</p>
                    <div className="text-lg font-medium text-gray-900 dark:text-white mb-2">{method.value}</div>
                    <Badge variant="secondary" className="mb-4 text-xs">
                      <Clock className="w-3 h-3 mr-1" />
                      {method.available}
                    </Badge>
                    <Button size="sm" className="w-full">
                      {method.action}
                      <ArrowRight className="w-4 h-4 ml-1" />
                    </Button>
                  </CardContent>
                </Card>
              );
            })}
          </div>
        </div>
      </section>

      {/* Contact Form & Office Info */}
      <section className="py-16">
        <div className="container-custom">
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-12">
            {/* Contact Form */}
            <div>
              <h2 className="font-playfair text-3xl font-bold text-gray-900 dark:text-white mb-6">
                Send us a Message
              </h2>
              <Card className="border-0 shadow-lg">
                <CardContent className="p-8">
                  <form onSubmit={handleSubmit} className="space-y-6">
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                      <div>
                        <Label htmlFor="name" className="text-sm font-medium text-gray-700 dark:text-gray-300 mb-2 block">
                          Full Name *
                        </Label>
                        <Input
                          id="name"
                          value={formData.name}
                          onChange={(e) => handleInputChange('name', e.target.value)}
                          placeholder="Your full name"
                          required
                          className="border-gray-300 dark:border-gray-600"
                        />
                      </div>
                      <div>
                        <Label htmlFor="phone" className="text-sm font-medium text-gray-700 dark:text-gray-300 mb-2 block">
                          Phone Number
                        </Label>
                        <Input
                          id="phone"
                          value={formData.phone}
                          onChange={(e) => handleInputChange('phone', e.target.value)}
                          placeholder="+91 98765 43210"
                          className="border-gray-300 dark:border-gray-600"
                        />
                      </div>
                    </div>
                    
                    <div>
                      <Label htmlFor="email" className="text-sm font-medium text-gray-700 dark:text-gray-300 mb-2 block">
                        Email Address *
                      </Label>
                      <Input
                        id="email"
                        type="email"
                        value={formData.email}
                        onChange={(e) => handleInputChange('email', e.target.value)}
                        placeholder="you@example.com"
                        required
                        className="border-gray-300 dark:border-gray-600"
                      />
                    </div>

                    <div>
                      <Label htmlFor="inquiryType" className="text-sm font-medium text-gray-700 dark:text-gray-300 mb-2 block">
                        Inquiry Type
                      </Label>
                      <Select value={formData.inquiryType} onValueChange={(value) => handleInputChange('inquiryType', value)}>
                        <SelectTrigger className="border-gray-300 dark:border-gray-600">
                          <SelectValue placeholder="Select inquiry type" />
                        </SelectTrigger>
                        <SelectContent>
                          <SelectItem value="venue">Venue Booking</SelectItem>
                          <SelectItem value="vendor">Vendor Services</SelectItem>
                          <SelectItem value="planning">Wedding Planning</SelectItem>
                          <SelectItem value="support">Technical Support</SelectItem>
                          <SelectItem value="partnership">Business Partnership</SelectItem>
                          <SelectItem value="other">Other</SelectItem>
                        </SelectContent>
                      </Select>
                    </div>

                    <div>
                      <Label htmlFor="subject" className="text-sm font-medium text-gray-700 dark:text-gray-300 mb-2 block">
                        Subject
                      </Label>
                      <Input
                        id="subject"
                        value={formData.subject}
                        onChange={(e) => handleInputChange('subject', e.target.value)}
                        placeholder="Brief subject of your inquiry"
                        className="border-gray-300 dark:border-gray-600"
                      />
                    </div>

                    <div>
                      <Label htmlFor="message" className="text-sm font-medium text-gray-700 dark:text-gray-300 mb-2 block">
                        Message *
                      </Label>
                      <Textarea
                        id="message"
                        value={formData.message}
                        onChange={(e) => handleInputChange('message', e.target.value)}
                        placeholder="Tell us more about how we can help you..."
                        rows={5}
                        required
                        className="border-gray-300 dark:border-gray-600"
                      />
                    </div>

                    <Button 
                      type="submit" 
                      size="lg" 
                      className="w-full bg-red-600 hover:bg-red-700"
                      disabled={isSubmitting}
                    >
                      {isSubmitting ? (
                        <>
                          <div className="w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2" />
                          Sending...
                        </>
                      ) : (
                        <>
                          <Send className="w-5 h-5 mr-2" />
                          Send Message
                        </>
                      )}
                    </Button>
                  </form>
              </p>
              <p className="mt-4 text-center">
                <Button variant="outline">
                  View All FAQs
                  <ArrowRight className="w-4 h-4 ml-2" />
                </Button>
              </p>
          </div>
{{ ... }}
      </section>

      {/* CTA Section */}
      <section className="py-16 bg-gradient-to-r from-red-600 to-amber-600">
        <div className="container-custom text-center">
          <Sparkles className="w-12 h-12 mx-auto mb-4 text-white opacity-90" />
          <h2 className="font-playfair text-3xl md:text-4xl font-bold text-white mb-4">
            Ready to Start Planning?
          </h2>
          <p className="text-xl text-white/90 mb-8 max-w-2xl mx-auto">
            Join thousands of couples who have found their perfect wedding vendors and venues through WedSpace.
          </p>
          <div className="flex flex-col sm:flex-row gap-4 justify-center">
            <Button size="lg" variant="secondary" className="bg-white text-red-600 hover:bg-gray-100">
              <Heart className="w-5 h-5 mr-2" />
              Start Planning Today
            </Button>
            <Button size="lg" variant="outline" className="border-white text-white hover:bg-white/10">
              <Users className="w-5 h-5 mr-2" />
              Browse Vendors
            </Button>
          </div>
        </div>
      </section>
    </main>
  );
}
